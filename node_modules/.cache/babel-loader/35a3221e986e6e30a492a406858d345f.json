{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documentos/workspace1/projetoPacienteWeb/cadastro-de-paciente/src/components/Navbars/DemoNavbar.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DemoNavbar(props) {\n  _s();\n\n  const location = useLocation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n\n  const getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n\n      return null;\n    });\n    return name;\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  }; // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"white\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, []);\n  React.useEffect(() => {\n    if (window.innerWidth < 993 && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    /*#__PURE__*/\n    // add or remove classes depending if we are on full-screen-maps page or not\n    _jsxDEV(Navbar, {\n      color: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"white\" : color,\n      expand: \"lg\",\n      className: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              ref: sidebarToggle,\n              className: \"navbar-toggler\",\n              onClick: () => openSidebar(),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n            href: \"/\",\n            children: getBrand()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(DemoNavbar, \"bW78OSO/vTJ9PTt7humJCvZTBDs=\", false, function () {\n  return [useLocation];\n});\n\n_c = DemoNavbar;\nexport default DemoNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoNavbar\");","map":{"version":3,"names":["React","Link","useLocation","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","routes","DemoNavbar","props","location","isOpen","setIsOpen","useState","dropdownOpen","setDropdownOpen","color","setColor","sidebarToggle","useRef","getBrand","name","map","prop","key","collapse","views","path","pathname","redirect","openSidebar","document","documentElement","classList","toggle","current","updateColor","window","innerWidth","useEffect","addEventListener","className","indexOf"],"sources":["/home/daniel/Documentos/workspace1/projetoPacienteWeb/cadastro-de-paciente/src/components/Navbars/DemoNavbar.js"],"sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nfunction DemoNavbar(props) {\n  const location = useLocation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  \n  const getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"white\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, []);\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <Navbar\n      color={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"white\"\n          : color\n      }\n      expand=\"lg\"\n      className={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"navbar-absolute fixed-top\"\n          : \"navbar-absolute fixed-top \" +\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\n      }\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default DemoNavbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}